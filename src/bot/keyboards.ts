import { Markup } from 'telegraf';
import { Group } from '../entities/group.entity';
import { WeekDay, WeekType } from '../entities/schedule.entity';
import { getWeekDayName, getWeekTypeName } from '../utils/date.utils';

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const mainMenuKeyboard = () => {
  return Markup.keyboard([
    ['üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è'],
    ['üìÜ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞'],
    ['üìö –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é'],
    ['üë• –°–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É'],
    ['‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'],
  ]).resize();
};

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≥—Ä—É–ø–ø—ã
export const groupSelectionKeyboard = (groups: Group[]) => {
  const buttons = groups.map((group) => [group.name]);
  return Markup.keyboard(buttons).resize();
};

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–Ω—è –Ω–µ–¥–µ–ª–∏
export const weekDaysKeyboard = () => {
  const buttons = Object.values(WeekDay).map((day) => [getWeekDayName(day)]);
  return Markup.keyboard([...buttons, ['üîô –ù–∞–∑–∞–¥']]).resize();
};

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –Ω–µ–¥–µ–ª–∏
export const weekTypeKeyboard = () => {
  return Markup.keyboard([
    [getWeekTypeName(WeekType.FIRST)],
    [getWeekTypeName(WeekType.SECOND)],
    [getWeekTypeName(WeekType.BOTH)],
    ['üîô –ù–∞–∑–∞–¥'],
  ]).resize();
};

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∞–¥–º–∏–Ω–∞
export const adminMenuKeyboard = () => {
  return Markup.keyboard([
    ['üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø–∞–º–∏'],
    ['üìö –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º'],
    ['üë§ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏'],
    ['üîô –í—ã–π—Ç–∏ –∏–∑ –∞–¥–º–∏–Ω–∫–∏'],
  ]).resize();
};

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø–∞–º–∏
export const groupManagementKeyboard = () => {
  return Markup.keyboard([
    ['‚ûï –î–æ–±–∞–≤–∏—Ç—å –≥—Ä—É–ø–ø—É'],
    ['‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≥—Ä—É–ø–ø—É'],
    ['‚ùå –£–¥–∞–ª–∏—Ç—å –≥—Ä—É–ø–ø—É'],
    ['üìã –°–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø'],
    ['üîô –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω–∫—É'],
  ]).resize();
};

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º
export const scheduleManagementKeyboard = () => {
  return Markup.keyboard([
    ['‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ'],
    ['‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–Ω—è—Ç–∏–µ'],
    ['‚ùå –£–¥–∞–ª–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ'],
    ['üìã –ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è'],
    ['üîô –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω–∫—É'],
  ]).resize();
};

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è
export const confirmationKeyboard = () => {
  return Markup.inlineKeyboard([
    [
      Markup.button.callback('‚úÖ –î–∞', 'confirm'),
      Markup.button.callback('‚ùå –ù–µ—Ç', 'cancel'),
    ],
  ]);
};

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è
export const cancelKeyboard = () => {
  return Markup.keyboard([['üîô –û—Ç–º–µ–Ω–∞']]).resize();
};

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
export const paginationKeyboard = (
  currentPage: number,
  totalPages: number,
  actionPrefix: string
) => {
  const buttons = [];

  if (currentPage > 1) {
    buttons.push(
      Markup.button.callback('‚¨ÖÔ∏è', `${actionPrefix}_prev_${currentPage}`)
    );
  }

  buttons.push(Markup.button.callback(`${currentPage}/${totalPages}`, 'noop'));

  if (currentPage < totalPages) {
    buttons.push(
      Markup.button.callback('‚û°Ô∏è', `${actionPrefix}_next_${currentPage}`)
    );
  }

  return Markup.inlineKeyboard([buttons]);
};
